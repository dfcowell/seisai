version: "3.7"
services:

  redis:
    image: redis:alpine
    ports:
      - "6379"
    networks:
      - backend

  db:
    image: postgres:11.6-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: postgres

  seisai:
    build: ./
    ports:
      - "8080"
    networks:
      - backend
    depends_on:
      - redis
      - db
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
    volumes:
      ./:/app
    command:

  # result:
  #   image: dockersamples/examplevotingapp_result:before
  #   ports:
  #     - "5001:80"
  #   networks:
  #     - backend
  #   depends_on:
  #     - db
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 2
  #       delay: 10s
  #     restart_policy:
  #       condition: on-failure

  # worker:
  #   image: dockersamples/examplevotingapp_worker
  #   networks:
  #     - frontend
  #     - backend
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     labels: [APP=VOTING]
  #     restart_policy:
  #       condition: on-failure
  #       delay: 10s
  #       max_attempts: 3
  #       window: 120s
  #     placement:
  #       constraints: [node.role == manager]

networks:
  backend:

volumes:
  db-data:
